/*
    Project Euler Problem No. 29 - Distinct powers

Consider all integer combinations of a**b for 2 <= a <=  5 and 2 <= b <= 5:

    2**2=4,  2**3=8,   2**4=16,  2**5=32
    3**2=9,  3**3=27,  3**4=81,  3**5=243
    4**2=16, 4**3=64,  4**4=256, 4**5=1024
    5**2=25, 5**3=125, 5**4=625, 5**5=3125

If they are then placed in numerical order, with any repeats removed, we get
the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a**b
for 2 <= a <= 100 and 2 <= b <= 100?
*/
package main

import (
    "fmt"
    "math/big"
)

const (
    MIN = 2
    MAX = 100
)

func PowUint64(a, b uint64) uint64 {
    p := a
    var i uint64
    for i = 2; i <= b; i++ { p *= a }
    return p
}

func PowInt64(a, b int64) int64 {
    p := a
    var i int64
    for i = 2; i <= b; i++ { p *= a }
    return p
}

/* calculates the matrix of powers from min**min to max**max  and returns the
 number of disctinct values */
func powers(min, max int) int {
    s := make(BigIntSet)
    for a := min; a <= max; a++ {
        for b := min; b <= max; b++ {
            big_a := big.NewInt(int64(a))
            big_b := big.NewInt(int64(b))
            p := big.NewInt(0)
            p = p.Exp(big_a, big_b, nil)
            s.Add(*p)
        }
    }
    return s.Len()
}

func main() {
c := `    Project Euler Problem No. 29 - Distinct powers

Consider all integer combinations of a**b for 2 <= a <= 5 and 2 <= b <= 5:

    2**2=4,  2**3=8,   2**4=16,  2**5=32
    3**2=9,  3**3=27,  3**4=81,  3**5=243
    4**2=16, 4**3=64,  4**4=256, 4**5=1024
    5**2=25, 5**3=125, 5**4=625, 5**5=3125

If they are then placed in numerical order, with any repeats removed, we get
the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a**b
for 2 <= a <= 100 and 2 <= b <= 100?  `

    fmt.Println(c)
    fmt.Println()

    num := powers(MIN, MAX)
    fmt.Printf(
        "There are %d disctinct powers in the sequence between %d and %d.\n",
        num, MIN, MAX)
}
