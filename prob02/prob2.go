/*
 *   Project Euler Problem No. 2 - Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the 
 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not 
 * exceed four million, find the sum of the even-valued terms.
 */
package main

import "fmt"

const Max int = 4000000

func main() {

    c := `Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms will be:
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not 
exceed four million, find the sum of the even-valued terms.`

    // we start with 1 and 2
    first := 1
    second := 2

    sum := 0
    for first < Max {
        if first % 2 == 0 {
            sum += first
        }
        first, second = second, first + second
    }
    fmt.Println(c)
    fmt.Println()
    fmt.Printf("The sum is %d.\n", sum)

}
